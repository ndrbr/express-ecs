name: Express CI

on:
  push:
    branches:
      - master

env:
  AWS_REGION: "ap-southeast-1"
  IMAGE_NAME: shrempf/express-docker
  TEST_TAG: shrempf/express-docker:test
  LATEST_TAG: shrempf/express-docker:latest

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile.dev
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Test
        run: |
          docker run --rm ${{ env.TEST_TAG }}

      - name: Get Hash
        run: |
          echo "SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - name: Get Branch
        run: |
          echo "GIT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Get Hash tag
        run: |
          echo "HASH_TAG=${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}" >> $GITHUB_ENV

      - name: Publish
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.LATEST_TAG }}, ${{ env.HASH_TAG }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: arn:aws:iam::868133316193:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Generate deployment package
        run: zip -r deploy.zip "Dockerrun.aws.json" ".ebextensions"

      - name: Generate Version label
        run: |
          echo "VER_LABEL=${{ env.GIT_BRANCH }}.${{ env.SHORT_SHA }}" >> $GITHUB_ENV

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ env.AWS_SESSION_TOKEN }}
          application_name: express-ecs
          environment_name: express-ecs-dev
          version_label: ${{ env.VER_LABEL }}
          version_description: ${{ GITHUB.SHA }}
          region: ${{ env.AWS_REGION }}
          deployment_package: deploy.zip
